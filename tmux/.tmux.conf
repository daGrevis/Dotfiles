# https://gist.github.com/andersevenrud/015e61af2fd264371032763d4ed965b6
set -g default-terminal "xterm-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

set -g base-index 1

set -g mouse on

set -g renumber-windows on

set -g set-titles on
set -g set-titles-string "#T"
set -g allow-rename on

set -g status-left ""
set -g status-right " #[fg=#65737e,bold]#(tmux display-message -p '#S') #{?client_prefix,#[fg=#65737e]<C-b> ,}"

set -g status-position top

setw -g window-status-separator ""

setw -g window-status-format " #I #W "

setw -g window-status-current-format " #I #W "

bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

bind -n C-Space popup -E '$SHELL -c mux'

bind x popup -E '$SHELL -c mux' \; run 'tmux kill-session -t "#S"'

set -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection

bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

fg1="#d6d6d7"
bg0="#131a24"
bg3="#29394f"
white="#dfdfe0"

set -g status-style bg=$bg0
set -g message-style bg=$bg0,fg=$fg1
set -g window-status-style bg=$bg0,fg=$fg1
set -g window-status-current-style bg=$bg3,fg=$white
set -g pane-border-style bg=$bg0,fg=$bg0
set -g pane-active-border-style bg=$bg0,fg=$bg0

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-Left' if-shell "$is_vim" 'send-keys M-Left' 'select-pane -L'
bind-key -n 'M-Down' if-shell "$is_vim" 'send-keys M-Down' 'select-pane -D'
bind-key -n 'M-Up' if-shell "$is_vim" 'send-keys M-Up' 'select-pane -U'
bind-key -n 'M-Right' if-shell "$is_vim" 'send-keys M-Right' 'select-pane -R'
bind-key -T copy-mode-vi 'M-Left' select-pane -L
bind-key -T copy-mode-vi 'M-Down' select-pane -D
bind-key -T copy-mode-vi 'M-Up' select-pane -U
bind-key -T copy-mode-vi 'M-Right' select-pane -R

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-yank'

set -g @yank_action 'copy-pipe'

run '~/.tmux/plugins/tpm/tpm'

# Install all tmux plugins on startup, tmux and tpm are installed via nix.
# Assume that we need to install plugins if tmux-sensible is not there.
if "test ! -d ~/.tmux/plugins/tmux-sensible" \
   "run '~/.tmux/plugins/tpm/bin/install_plugins'"
